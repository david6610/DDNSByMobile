<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\list\stm-tcp.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\list\stm-tcp.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 481]: Last Updated: Fri Dec 05 16:26:26 2014
<BR><P>
<H3>Maximum Stack Usage =       2816 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; loop_process_uart1 &rArr; analyse_GSM_SM &rArr; clear_rcv_buf &rArr; __aeabi_memcpy
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[35]">main</a> from main.o(.text) referenced from entry7.o(.ARM.Collect$$$$00000007)
 <LI><a href="#[36]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[37]">fputc</a> from fputc.o(i.fputc) referenced from printfb.o(i.__0printf$bare)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[36]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[183]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[38]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[180]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[184]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e5]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[e6]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[e7]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[e8]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[e9]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Configuration
</UL>

<P><STRONG><a name="[185]"></a>IWDG_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>RCC_DeInit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[3a]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[188]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18a]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18b]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18e]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[191]"></a>RCC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>RCC_LSEConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[196]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[198]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Configuration
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enc28j60_Init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Config
</UL>

<P><STRONG><a name="[f1]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Configuration
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Configuration
</UL>

<P><STRONG><a name="[3d]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[3e]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[199]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19a]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19b]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19c]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19d]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19e]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[c8]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enc28j60_Init
</UL>

<P><STRONG><a name="[3f]"></a>I2S_Init</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[19f]"></a>SPI_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1a0]"></a>I2S_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enc28j60_Init
</UL>

<P><STRONG><a name="[1a1]"></a>I2S_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1a2]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1a3]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
</UL>

<P><STRONG><a name="[cc]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
</UL>

<P><STRONG><a name="[1a4]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1a6]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1a7]"></a>SPI_TransmitCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1a8]"></a>SPI_CalculateCRC</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>SPI_GetCRC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1aa]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1ab]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
</UL>

<P><STRONG><a name="[1ac]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1ad]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>SPI_I2S_ClearITPendingBit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>TIM_DeInit</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[f2]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Configuration
</UL>

<P><STRONG><a name="[1af]"></a>TIM_OC1Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b0]"></a>TIM_OC2Init</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b1]"></a>TIM_OC3Init</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b2]"></a>TIM_OC4Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[48]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[46]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[44]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[42]"></a>TIM_ICInit</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[4b]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[1b3]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b4]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b5]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b6]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b7]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Configuration
</UL>

<P><STRONG><a name="[1b8]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[f4]"></a>TIM_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Configuration
</UL>

<P><STRONG><a name="[1b9]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ba]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1bb]"></a>TIM_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1bc]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[4c]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[4e]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[50]"></a>TIM_ETRConfig</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[4f]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[51]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[1bd]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1be]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c0]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c1]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c2]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c3]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Configuration
</UL>

<P><STRONG><a name="[1c4]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c7]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c9]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ca]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1cb]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1cc]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ce]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1cf]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d0]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d6]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d8]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1da]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1db]"></a>TIM_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>TIM_SelectOCxM</STRONG> (Thumb, 142 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1df]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e2]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e3]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e4]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e6]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e7]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e8]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1e9]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ea]"></a>TIM_SetClockDivision</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1eb]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ec]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ee]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1ef]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f1]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[f0]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Configuration
</UL>

<P><STRONG><a name="[52]"></a>USART_DeInit</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[53]"></a>USART_Init</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Configuration
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>

<P><STRONG><a name="[1f3]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>USART_ClockInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClockInit
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Configuration
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>

<P><STRONG><a name="[1f4]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Configuration
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>

<P><STRONG><a name="[f8]"></a>USART_ITConfig</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Configuration
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>

<P><STRONG><a name="[1f5]"></a>USART_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[fd]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Put_Data
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Put_Char
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Data
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_String
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Char
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_String
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Char
</UL>

<P><STRONG><a name="[ec]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1fb]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[1ff]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[200]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>USART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Put_Data
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Put_Char
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Data
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_String
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Char
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_String
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Char
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[ee]"></a>USART_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[ea]"></a>USART_GetITStatus</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[eb]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[dc]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[dd]"></a>NVIC_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[203]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[207]"></a>FLASH_HalfCycleAccessCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[209]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>FLASH_GetStatus</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[57]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_UserOptionByteConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadOutProtection
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EnableWriteProtection
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramOptionByteData
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllPages
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[5a]"></a>FLASH_ErasePage</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[5b]"></a>FLASH_EraseAllPages</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5c]"></a>FLASH_EraseOptionBytes</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5d]"></a>FLASH_ProgramWord</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[5e]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[5f]"></a>FLASH_ProgramOptionByteData</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[60]"></a>FLASH_EnableWriteProtection</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[61]"></a>FLASH_ReadOutProtection</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[62]"></a>FLASH_UserOptionByteConfig</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[20a]"></a>FLASH_GetUserOptionByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[20b]"></a>FLASH_GetWriteProtectionOptionByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>FLASH_GetReadOutProtectionStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>FLASH_GetPrefetchBufferStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>FLASH_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>FLASH_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[210]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>GPIO_DeInit</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[64]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[c6]"></a>GPIO_Init</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Configuration
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Configuration
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enc28j60_Init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Config
</UL>

<P><STRONG><a name="[211]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;now_status
</UL>

<P><STRONG><a name="[212]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[213]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Data
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_String
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Char
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_String
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Char
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED2_OFF
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1_OFF
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Green_OFF
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enc28j60_Init
</UL>

<P><STRONG><a name="[d5]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Data
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_String
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Char
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_String
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Char
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED2_ON
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED1_ON
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Green_ON
</UL>

<P><STRONG><a name="[215]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[219]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[21b]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>uip_setipid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uip.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>uip_add32</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, uip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_add_rcv_nxt
</UL>

<P><STRONG><a name="[67]"></a>htons</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_connected
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_done
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_timedout
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_closed
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU16ToStr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newdata
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_entries
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_udp_new
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_connect
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_ipchksum
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_chksum
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upper_layer_chksum
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[65]"></a>uip_chksum</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, uip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chksum
</UL>

<P><STRONG><a name="[68]"></a>uip_ipchksum</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = uip_ipchksum &rArr; chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_reass
</UL>

<P><STRONG><a name="[6a]"></a>uip_tcpchksum</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uip_tcpchksum &rArr; upper_layer_chksum &rArr; chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upper_layer_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
</UL>

<P><STRONG><a name="[152]"></a>uip_init</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, uip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_uip
</UL>

<P><STRONG><a name="[6b]"></a>uip_connect</STRONG> (Thumb, 246 bytes, Stack size 12 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uip_connect
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcp_Init
</UL>

<P><STRONG><a name="[6c]"></a>uip_udp_new</STRONG> (Thumb, 194 bytes, Stack size 12 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uip_udp_new
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_conf
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcpc_init
</UL>

<P><STRONG><a name="[21d]"></a>uip_unlisten</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uip.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>uip_listen</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, uip.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>uip_process</STRONG> (Thumb, 4164 bytes, Stack size 16 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = uip_process &rArr; Uip_Appcall &rArr; webclient_appcall &rArr; newdata_WClt &rArr; webclient_datahandler &rArr; sendIP2phone &rArr; s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_appcall
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_tcpchksum
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_ipchksum
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_add32
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_add_rcv_nxt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_reass
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[75]"></a>uip_send</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uip_send &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;senddata
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_entries
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_request
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_discover
</UL>

<P><STRONG><a name="[153]"></a>uip_arp_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uip_arp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcpc_configured
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_uip
</UL>

<P><STRONG><a name="[14c]"></a>uip_arp_timer</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, uip_arp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[76]"></a>uip_arp_arpin</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, uip_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uip_arp_arpin &rArr; uip_arp_update
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_update
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[78]"></a>uip_arp_out</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, uip_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uip_arp_out
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[7a]"></a>timer_set</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, uip_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_dhcp
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcpc_configured
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_uip
</UL>

<P><STRONG><a name="[14b]"></a>timer_reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uip_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[7c]"></a>timer_restart</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, uip_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>

<P><STRONG><a name="[7d]"></a>timer_expired</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uip_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_expired
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_dhcp
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[74]"></a>resolv_appcall</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, resolv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = resolv_appcall &rArr; newdata &rArr; resolv_found &rArr; SendEmail_163 &rArr; smtp_send &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newdata
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_entries
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Udp_Appcall
</UL>

<P><STRONG><a name="[82]"></a>resolv_query</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, resolv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = resolv_query
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
</UL>

<P><STRONG><a name="[84]"></a>resolv_lookup</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, resolv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = resolv_lookup &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
</UL>

<P><STRONG><a name="[21f]"></a>resolv_getserver</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, resolv.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>resolv_conf</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, resolv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = resolv_conf &rArr; uip_udp_new
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_udp_new
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
</UL>

<P><STRONG><a name="[115]"></a>resolv_init</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, resolv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
</UL>

<P><STRONG><a name="[220]"></a>webclient_mimetype</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, webclient.o(.text), UNUSED)

<P><STRONG><a name="[221]"></a>webclient_filename</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, webclient.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>webclient_hostname</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, webclient.o(.text), UNUSED)

<P><STRONG><a name="[223]"></a>webclient_rport</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, webclient.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>webclient_lport</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, webclient.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[224]"></a>webclient_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, webclient.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>webclient_close</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, webclient.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_timedout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_closed
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_aborted
</UL>

<P><STRONG><a name="[89]"></a>webclient_get</STRONG> (Thumb, 280 bytes, Stack size 136 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = webclient_get &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uiplib_ipaddrconv
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU16ToStr
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_connection
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_lookup
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_connect
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Web_Link_Init
</UL>

<P><STRONG><a name="[9a]"></a>webclient_appcall</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1240<LI>Call Chain = webclient_appcall &rArr; newdata_WClt &rArr; webclient_datahandler &rArr; sendIP2phone &rArr; s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_timedout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_connected
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_closed
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_aborted
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newdata_WClt
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acked
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;senddata
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_lookup
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_query
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[8a]"></a>uiplib_ipaddrconv</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, uiplib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uiplib_ipaddrconv
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
</UL>

<P><STRONG><a name="[9f]"></a>smtp_done</STRONG> (Thumb, 174 bytes, Stack size 104 bytes, smtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = smtp_done &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_appcall
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_thread
</UL>

<P><STRONG><a name="[a5]"></a>smtp_connected</STRONG> (Thumb, 110 bytes, Stack size 112 bytes, smtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = smtp_connected &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_appcall
</UL>

<P><STRONG><a name="[a6]"></a>smtp_appcall</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, smtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = smtp_appcall &rArr; smtp_thread &rArr; smtp_done &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_connected
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_done
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[163]"></a>smtp_configure</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, smtp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[a7]"></a>smtp_send</STRONG> (Thumb, 358 bytes, Stack size 136 bytes, smtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = smtp_send &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU16ToStr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_connect
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEmail_163
</UL>

<P><STRONG><a name="[16b]"></a>smtp_lport</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smtp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[164]"></a>smtp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, smtp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[a3]"></a>psock_send</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, psock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = psock_send &rArr; send_data &rArr; uip_send &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_acked
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_thread
</UL>

<P><STRONG><a name="[ac]"></a>psock_generator_send</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, psock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_acked
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data
</UL>

<P><STRONG><a name="[b0]"></a>psock_datalen</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, psock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readbuf
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readto
</UL>

<P><STRONG><a name="[ae]"></a>psock_newdata</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, psock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readbuf
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readto
</UL>

<P><STRONG><a name="[a2]"></a>psock_readto</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, psock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = psock_readto &rArr; buf_bufto
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_newdata
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_datalen
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_bufto
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_thread
</UL>

<P><STRONG><a name="[b1]"></a>psock_readbuf</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, psock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_newdata
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_datalen
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_bufdata
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_setup
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[a8]"></a>psock_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, psock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = psock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
</UL>

<P><STRONG><a name="[b3]"></a>enc28j60ReadOp</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enc28j60ReadOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketReceive
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Read
</UL>

<P><STRONG><a name="[b5]"></a>enc28j60WriteOp</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketReceive
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketSend
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Write
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60SetBank
</UL>

<P><STRONG><a name="[b6]"></a>enc28j60ReadBuffer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enc28j60ReadBuffer &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketReceive
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketSend
</UL>

<P><STRONG><a name="[b7]"></a>enc28j60WriteBuffer</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enc28j60WriteBuffer &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketSend
</UL>

<P><STRONG><a name="[b8]"></a>enc28j60SetBank</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60WriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Write
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Read
</UL>

<P><STRONG><a name="[b9]"></a>enc28j60Read</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = enc28j60Read &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60SetBank
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60ReadOp
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60_read_phyreg
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketReceive
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketSend
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60getrev
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PhyWrite
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_tcpip
</UL>

<P><STRONG><a name="[ba]"></a>enc28j60Write</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = enc28j60Write &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60SetBank
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60WriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60_read_phyreg
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketReceive
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketSend
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60clkout
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PhyWrite
</UL>

<P><STRONG><a name="[bb]"></a>enc28j60PhyWrite</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = enc28j60PhyWrite &rArr; enc28j60Write &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Write
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Read
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Init
</UL>

<P><STRONG><a name="[bc]"></a>enc28j60clkout</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, enc28j60.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Write
</UL>

<P><STRONG><a name="[bd]"></a>enc28j60Init</STRONG> (Thumb, 318 bytes, Stack size 8 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = enc28j60Init &rArr; enc28j60PhyWrite &rArr; enc28j60Write &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PhyWrite
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Write
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60SetBank
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60WriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etherdev_init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Enc28j60_Chip
</UL>

<P><STRONG><a name="[bf]"></a>enc28j60getrev</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = enc28j60getrev &rArr; enc28j60Read &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketSend
</UL>

<P><STRONG><a name="[c0]"></a>enc28j60PacketSend</STRONG> (Thumb, 440 bytes, Stack size 40 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = enc28j60PacketSend &rArr; enc28j60getrev &rArr; enc28j60Read &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60getrev
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Write
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Read
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60WriteBuffer
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60ReadBuffer
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60WriteOp
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etherdev_send
</UL>

<P><STRONG><a name="[c1]"></a>enc28j60PacketReceive</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = enc28j60PacketReceive &rArr; enc28j60Write &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Write
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Read
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60ReadBuffer
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60WriteOp
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60ReadOp
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etherdev_read
</UL>

<P><STRONG><a name="[c2]"></a>enc28j60_read_phyreg</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = enc28j60_read_phyreg &rArr; enc28j60Write &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Write
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60_mac_is_linked
</UL>

<P><STRONG><a name="[c3]"></a>enc28j60_mac_is_linked</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = enc28j60_mac_is_linked &rArr; enc28j60_read_phyreg &rArr; enc28j60Write &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60_read_phyreg
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_tcpip
</UL>

<P><STRONG><a name="[c4]"></a>SPI_Enc28j60_Init</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, spi_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_Enc28j60_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>SPI1_ReadWrite</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, spi_enc28j60.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60WriteBuffer
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60ReadBuffer
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60WriteOp
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60ReadOp
</UL>

<P><STRONG><a name="[e3]"></a>delay_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[be]"></a>delay_ms</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Put_Data
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_Put_Char
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Data
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_String
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Put_Char
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_String
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Char
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedGreenFlashFast
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedGreenFlashSlow
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedPwrUp
</UL>

<P><STRONG><a name="[225]"></a>delay_us</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, delay.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>EXTI_Configuration</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[cd]"></a>Hex2HexStr</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, global.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[ce]"></a>Hex2Str</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, global.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>

<P><STRONG><a name="[226]"></a>U16_2Str</STRONG> (Thumb, 320 bytes, Stack size 8 bytes, global.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>ReplaceStr</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, global.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ReplaceStr &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>itoa</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, global.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = itoa
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_done
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU16ToStr
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU8ToStr
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_mem_para
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_flash_para
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
</UL>

<P><STRONG><a name="[d3]"></a>GPIO_Configuration</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[d4]"></a>LED_Green_ON</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[d6]"></a>LED_Green_OFF</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>

<P><STRONG><a name="[10f]"></a>LED_Green_FLASH</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedGreenFlashFast
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedGreenFlashSlow
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedPwrUp
</UL>

<P><STRONG><a name="[227]"></a>LED_Red_FLASH</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>LED1_ON</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[d8]"></a>LED1_OFF</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>

<P><STRONG><a name="[228]"></a>LED1_FLASH</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>LED2_ON</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>

<P><STRONG><a name="[da]"></a>LED2_OFF</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>

<P><STRONG><a name="[229]"></a>LED2_FLASH</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>NVIC_Configuration</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, platform_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[de]"></a>RCC_Configuration</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, platform_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_Configuration &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[df]"></a>Platform_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, platform_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Platform_Init &rArr; USART_Configuration &rArr; USART1_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Configuration
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Configuration
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>IWDG_Configuration</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, platform_init.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM2_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e0]"></a>Timer_Configuration</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Timer_Configuration &rArr; TIM_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[f6]"></a>USART1_Configuration</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USART1_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClockInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Configuration
</UL>

<P><STRONG><a name="[e1]"></a>USART_Configuration</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USART_Configuration &rArr; USART1_Configuration &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
</UL>

<P><STRONG><a name="[fa]"></a>USART2_Configuration</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClockInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>

<P><STRONG><a name="[fb]"></a>USART3_Configuration</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClockInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>

<P><STRONG><a name="[fc]"></a>USART1_Put_Char</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[fe]"></a>USART1_Put_Data</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART1_Put_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_GSM
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_GSM_active
</UL>

<P><STRONG><a name="[ff]"></a>USART1_Put_String</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[100]"></a>USART2_Put_Char</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[101]"></a>USART2_Put_String</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[102]"></a>USART2_Put_Data</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[103]"></a>USART3_Put_Char</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[104]"></a>USART3_Put_Data</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[105]"></a>Rcv_Usart1_To_Array</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usart_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Rcv_Usart1_To_Array
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataToBuf1
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_uart1
</UL>

<P><STRONG><a name="[156]"></a>init_virtual_addr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, eeprom.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10a]"></a>EE_ReadVariable</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_email
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_URL
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_phone
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_IP
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[10b]"></a>EE_Init</STRONG> (Thumb, 484 bytes, Stack size 32 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EE_Init &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Format
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10d]"></a>EE_WriteVariable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_email
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_URL
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_phone
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_IP
</UL>

<P><STRONG><a name="[154]"></a>Get_SerialNum</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_SerialNum
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[158]"></a>loop_feed_softdog</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[147]"></a>feed_GSM_wakeup_softdog</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_uart1
</UL>

<P><STRONG><a name="[22a]"></a>feed_Get_IP_softdog</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>feed_GSM_offline_softdog</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_uart1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
</UL>

<P><STRONG><a name="[10e]"></a>LedPwrUp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LedPwrUp
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Green_FLASH
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[110]"></a>LedGreenFlashSlow</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Green_FLASH
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[111]"></a>LedGreenFlashFast</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Green_FLASH
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[169]"></a>tcp_data_Analyse</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[112]"></a>XEmailAddr</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = XEmailAddr &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEmail_163
</UL>

<P><STRONG><a name="[113]"></a>GetEmailUserPW</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetEmailUserPW &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[8c]"></a>IpU16ToStr</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
</UL>

<P><STRONG><a name="[114]"></a>LookupIP</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = LookupIP &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uiplib_ipaddrconv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU16ToStr
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_conf
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_lookup
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_query
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Web_Link_Init
</UL>

<P><STRONG><a name="[116]"></a>SendEmail_163</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = SendEmail_163 &rArr; smtp_send &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XEmailAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[117]"></a>IO_Config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[118]"></a>now_status</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = now_status
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadConfigPara
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
</UL>

<P><STRONG><a name="[11a]"></a>save_para_IP</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = save_para_IP &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
</UL>

<P><STRONG><a name="[11b]"></a>read_para_IP</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = read_para_IP &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_flash_para
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_to_mem
</UL>

<P><STRONG><a name="[11c]"></a>save_para_phone</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = save_para_phone &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
</UL>

<P><STRONG><a name="[11d]"></a>read_para_phone</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = read_para_phone &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_flash_para
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_to_mem
</UL>

<P><STRONG><a name="[11e]"></a>save_para_URL</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = save_para_URL &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
</UL>

<P><STRONG><a name="[11f]"></a>read_para_URL</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = read_para_URL &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_flash_para
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_to_mem
</UL>

<P><STRONG><a name="[120]"></a>save_para_email</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = save_para_email &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
</UL>

<P><STRONG><a name="[121]"></a>read_para_email</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = read_para_email &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_flash_para
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_to_mem
</UL>

<P><STRONG><a name="[8d]"></a>debug_info_show</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = debug_info_show &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_connected
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_done
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_timedout
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_connected
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_closed
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_aborted
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;senddata
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSmtpSvr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadConfigPara
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMemTelUnicode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
</UL>

<P><STRONG><a name="[122]"></a>save_mem_to_flash</STRONG> (Thumb, 526 bytes, Stack size 80 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = save_mem_to_flash &rArr; save_para_email &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_email
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_URL
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_phone
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_IP
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;now_status
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[123]"></a>GetActWeb</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetActWeb &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Web_Link_Init
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowActiveWeb
</UL>

<P><STRONG><a name="[124]"></a>ShowActiveWeb</STRONG> (Thumb, 274 bytes, Stack size 168 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = ShowActiveWeb &rArr; GetActWeb &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetActWeb
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[125]"></a>read_flash_to_mem</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = read_flash_to_mem &rArr; read_para_email &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_email
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_URL
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_phone
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_IP
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadConfigPara
</UL>

<P><STRONG><a name="[126]"></a>CompareFlashWithMem</STRONG> (Thumb, 1858 bytes, Stack size 264 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CompareFlashWithMem &rArr; read_para_email &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_email
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_URL
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_phone
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_IP
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[127]"></a>show_flash_para</STRONG> (Thumb, 886 bytes, Stack size 248 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = show_flash_para &rArr; read_para_email &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_email
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_URL
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_phone
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_IP
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[128]"></a>show_mem_para</STRONG> (Thumb, 882 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = show_mem_para &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[129]"></a>ShowMemTelUnicode</STRONG> (Thumb, 220 bytes, Stack size 416 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = ShowMemTelUnicode &rArr; debug_info_show &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[12b]"></a>AsciiToUnicode</STRONG> (Thumb, 242 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AsciiToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendIP2phone
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiIpPortToUncode
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TelAsciiToUnicode
</UL>

<P><STRONG><a name="[12a]"></a>TelAsciiToUnicode</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TelAsciiToUnicode &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TelLoad
</UL>

<P><STRONG><a name="[12c]"></a>TelLoad</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TelLoad &rArr; TelAsciiToUnicode &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TelAsciiToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadConfigPara
</UL>

<P><STRONG><a name="[12d]"></a>ReadConfigPara</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ReadConfigPara &rArr; TelLoad &rArr; TelAsciiToUnicode &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TelLoad
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_to_mem
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;now_status
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[157]"></a>init_sm_queue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12f]"></a>s_FIFO_Null</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_head_modify
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_pop
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_head
</UL>

<P><STRONG><a name="[132]"></a>s_FIFO_Full</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendIP2phone
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_push
</UL>

<P><STRONG><a name="[135]"></a>r_FIFO_Null</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_FIFO_pop
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_FIFO_head
</UL>

<P><STRONG><a name="[138]"></a>r_FIFO_Full</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_FIFO_push
</UL>

<P><STRONG><a name="[12e]"></a>s_FIFO_head</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = s_FIFO_head &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_Null
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
</UL>

<P><STRONG><a name="[130]"></a>s_FIFO_pop</STRONG> (Thumb, 390 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = s_FIFO_pop &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_Null
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
</UL>

<P><STRONG><a name="[131]"></a>s_FIFO_push</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_Full
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendIP2phone
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
</UL>

<P><STRONG><a name="[133]"></a>s_FIFO_head_modify</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = s_FIFO_head_modify &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_Null
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
</UL>

<P><STRONG><a name="[134]"></a>r_FIFO_head</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_FIFO_Null
</UL>

<P><STRONG><a name="[136]"></a>r_FIFO_pop</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_FIFO_Null
</UL>

<P><STRONG><a name="[137]"></a>r_FIFO_push</STRONG> (Thumb, 80 bytes, Stack size 4 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_FIFO_Full
</UL>

<P><STRONG><a name="[139]"></a>clear_rcv_buf</STRONG> (Thumb, 80 bytes, Stack size 1032 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = clear_rcv_buf &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_GSM
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_GSM_active
</UL>

<P><STRONG><a name="[13a]"></a>wait_GSM_active</STRONG> (Thumb, 384 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = wait_GSM_active &rArr; clear_rcv_buf &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_rcv_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_uart1
</UL>

<P><STRONG><a name="[13b]"></a>init_GSM</STRONG> (Thumb, 418 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = init_GSM &rArr; clear_rcv_buf &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_rcv_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_uart1
</UL>

<P><STRONG><a name="[13c]"></a>catch_phone_sm</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = catch_phone_sm &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
</UL>

<P><STRONG><a name="[13d]"></a>analyse_GSM_SM</STRONG> (Thumb, 1102 bytes, Stack size 1768 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2808<LI>Call Chain = analyse_GSM_SM &rArr; clear_rcv_buf &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catch_phone_sm
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_rcv_buf
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_push
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_pop
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_Full
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_Null
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;now_status
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_uart1
</UL>

<P><STRONG><a name="[13e]"></a>AsciiIpPortToUncode</STRONG> (Thumb, 16 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AsciiIpPortToUncode &rArr; AsciiToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
</UL>

<P><STRONG><a name="[13f]"></a>IpU8ToStr</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IpU8ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
</UL>

<P><STRONG><a name="[140]"></a>Web_Link_Init</STRONG> (Thumb, 40 bytes, Stack size 168 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = Web_Link_Init &rArr; webclient_get &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetActWeb
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
</UL>

<P><STRONG><a name="[141]"></a>UnicodeToAscii</STRONG> (Thumb, 100 bytes, Stack size 616 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = UnicodeToAscii &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
</UL>

<P><STRONG><a name="[143]"></a>UART_cmd_procese</STRONG> (Thumb, 664 bytes, Stack size 1312 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1936<LI>Call Chain = UART_cmd_procese &rArr; UnicodeToAscii &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToAscii
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Web_Link_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU8ToStr
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiIpPortToUncode
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_head_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
</UL>

<P><STRONG><a name="[144]"></a>loop_process_sm</STRONG> (Thumb, 366 bytes, Stack size 672 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2608<LI>Call Chain = loop_process_sm &rArr; UART_cmd_procese &rArr; UnicodeToAscii &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Put_Data
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_head
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_Null
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_GSM_offline_softdog
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[146]"></a>loop_process_uart1</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2816<LI>Call Chain = loop_process_uart1 &rArr; analyse_GSM_SM &rArr; clear_rcv_buf &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rcv_Usart1_To_Array
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_GSM
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_GSM_active
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_GSM_offline_softdog
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;feed_GSM_wakeup_softdog
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14f]"></a>sys_time_poll</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_tcpip
</UL>

<P><STRONG><a name="[148]"></a>uip_main</STRONG> (Thumb, 490 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = uip_main &rArr; uip_process &rArr; Uip_Appcall &rArr; webclient_appcall &rArr; newdata_WClt &rArr; webclient_datahandler &rArr; sendIP2phone &rArr; s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_expired
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_reset
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_out
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_arpin
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_timer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etherdev_send
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etherdev_read
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_tcpip
</UL>

<P><STRONG><a name="[14d]"></a>Init_Enc28j60_Chip</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Init_Enc28j60_Chip &rArr; enc28j60Init &rArr; enc28j60PhyWrite &rArr; enc28j60Write &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_tcpip
</UL>

<P><STRONG><a name="[14e]"></a>loop_process_tcpip</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = loop_process_tcpip &rArr; uip_main &rArr; uip_process &rArr; Uip_Appcall &rArr; webclient_appcall &rArr; newdata_WClt &rArr; webclient_datahandler &rArr; sendIP2phone &rArr; s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60_mac_is_linked
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Read
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Enc28j60_Chip
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_poll
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[150]"></a>Tcp_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Tcp_Init &rArr; uip_connect
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcpc_configured
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_uip
</UL>

<P><STRONG><a name="[151]"></a>Init_uip</STRONG> (Thumb, 410 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Init_uip &rArr; Tcp_Init &rArr; uip_connect
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcp_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2816<LI>Call Chain = main &rArr; loop_process_uart1 &rArr; analyse_GSM_SM &rArr; clear_rcv_buf &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Platform_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceStr
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enc28j60_Init
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_uip
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_tcpip
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Enc28j60_Chip
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_uart1
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sm_queue
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadConfigPara
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Config
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedPwrUp
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_feed_softdog
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SerialNum
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_virtual_addr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[168]"></a>app_aborted</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[167]"></a>app_timedout</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[166]"></a>app_closed</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[165]"></a>app_connected</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[22b]"></a>app_stop</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>app_rexmit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>lport2ripStr</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU16ToStr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_connected
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_done
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_timedout
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_closed
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[159]"></a>getSmtpSvr</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = getSmtpSvr &rArr; debug_info_show &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[15a]"></a>net_cmd_get_para</STRONG> (Thumb, 852 bytes, Stack size 96 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = net_cmd_get_para &rArr; read_para_email &rArr; EE_ReadVariable
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_email
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_URL
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_phone
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_para_IP
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[15b]"></a>IsValidPhone</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IsValidPhone
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
</UL>

<P><STRONG><a name="[15f]"></a>AsciiToUnsignInt</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpStrToU8
</UL>

<P><STRONG><a name="[15e]"></a>Isdigit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpStrToU8
</UL>

<P><STRONG><a name="[15d]"></a>IsDot</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpStrToU8
</UL>

<P><STRONG><a name="[15c]"></a>IpStrToU8</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IpStrToU8
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDot
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Isdigit
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiToUnsignInt
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
</UL>

<P><STRONG><a name="[160]"></a>Extract_N_V_Para</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Extract_N_V_Para &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
</UL>

<P><STRONG><a name="[161]"></a>net_cmd_set_para</STRONG> (Thumb, 910 bytes, Stack size 152 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = net_cmd_set_para &rArr; save_para_email &rArr; EE_WriteVariable &rArr; EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extract_N_V_Para
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpStrToU8
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsValidPhone
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_email
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_URL
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_phone
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_para_IP
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;now_status
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[162]"></a>net_cmd_process</STRONG> (Thumb, 1958 bytes, Stack size 72 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = net_cmd_process &rArr; ShowMemTelUnicode &rArr; debug_info_show &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_configure
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSmtpSvr
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Web_Link_Init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMemTelUnicode
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_mem_para
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_flash_para
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash_to_mem
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowActiveWeb
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;now_status
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEmail_163
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmailUserPW
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
</UL>

<P><STRONG><a name="[73]"></a>Uip_Appcall</STRONG> (Thumb, 1262 bytes, Stack size 104 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = Uip_Appcall &rArr; webclient_appcall &rArr; newdata_WClt &rArr; webclient_datahandler &rArr; sendIP2phone &rArr; s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_lport
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_appcall
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_lport
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_connect
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_closed
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timedout
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_aborted
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_data_Analyse
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
</UL>

<P><STRONG><a name="[16c]"></a>Udp_Appcall</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_appcall
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcpc_appcall
</UL>

<P><STRONG><a name="[16e]"></a>dhcpc_configured</STRONG> (Thumb, 696 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tcp_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_dhcp
</UL>

<P><STRONG><a name="[7f]"></a>resolv_found</STRONG> (Thumb, 250 bytes, Stack size 224 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = resolv_found &rArr; SendEmail_163 &rArr; smtp_send &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_configure
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU16ToStr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetActWeb
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEmail_163
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmailUserPW
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newdata
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_entries
</UL>

<P><STRONG><a name="[9c]"></a>webclient_closed</STRONG> (Thumb, 120 bytes, Stack size 112 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = webclient_closed &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_close
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
</UL>

<P><STRONG><a name="[94]"></a>webclient_aborted</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = webclient_aborted &rArr; debug_info_show &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_close
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_statusline
</UL>

<P><STRONG><a name="[9d]"></a>webclient_timedout</STRONG> (Thumb, 120 bytes, Stack size 120 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = webclient_timedout &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_close
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
</UL>

<P><STRONG><a name="[9b]"></a>webclient_connected</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = webclient_connected &rArr; debug_info_show &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
</UL>

<P><STRONG><a name="[170]"></a>sendIP2phone</STRONG> (Thumb, 108 bytes, Stack size 976 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000<LI>Call Chain = sendIP2phone &rArr; s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_push
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_Full
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
</UL>

<P><STRONG><a name="[171]"></a>ParsePageIpAddr</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ParsePageIpAddr &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
</UL>

<P><STRONG><a name="[99]"></a>webclient_datahandler</STRONG> (Thumb, 280 bytes, Stack size 224 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = webclient_datahandler &rArr; sendIP2phone &rArr; s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_configure
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_close
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePageIpAddr
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendIP2phone
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSmtpSvr
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetActWeb
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEmail_163
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmailUserPW
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newdata_WClt
</UL>

<P><STRONG><a name="[7b]"></a>clock_time</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock-arch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_expired
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_restart
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set
</UL>

<P><STRONG><a name="[172]"></a>etherdev_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tapdev.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60Init
</UL>

<P><STRONG><a name="[149]"></a>etherdev_read</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tapdev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = etherdev_read &rArr; enc28j60PacketReceive &rArr; enc28j60Write &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[14a]"></a>etherdev_send</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tapdev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = etherdev_send &rArr; enc28j60PacketSend &rArr; enc28j60getrev &rArr; enc28j60Read &rArr; enc28j60SetBank &rArr; enc28j60WriteOp &rArr; SPI1_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enc28j60PacketSend
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_main
</UL>

<P><STRONG><a name="[17e]"></a>dhcpc_init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_udp_new
</UL>

<P><STRONG><a name="[16d]"></a>dhcpc_appcall</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_dhcp
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Udp_Appcall
</UL>

<P><STRONG><a name="[22d]"></a>dhcpc_request</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, dhcpc.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_bufdata
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_connected
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_done
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_timedout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_closed
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_reass
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_msg
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePageIpAddr
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendIP2phone
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Extract_N_V_Para
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSmtpSvr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToAscii
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU8ToStr
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catch_phone_sm
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_rcv_buf
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_head_modify
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_push
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_pop
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_head
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TelAsciiToUnicode
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMemTelUnicode
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_mem_para
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_flash_para
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowActiveWeb
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetActWeb
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmailUserPW
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XEmailAddr
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_connected
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_timedout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_connected
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_closed
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_aborted
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendIP2phone
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSmtpSvr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_GSM
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_GSM_active
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadConfigPara
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Str
</UL>

<P><STRONG><a name="[22f]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_out
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[231]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceStr
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Str
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2HexStr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_reass
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_msg
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToAscii
</UL>

<P><STRONG><a name="[233]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[17f]"></a>_memset$wrapper</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[d2]"></a>strcat</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceStr
</UL>

<P><STRONG><a name="[d1]"></a>strstr</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceStr
</UL>

<P><STRONG><a name="[8f]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceStr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_headers
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_string
</UL>

<P><STRONG><a name="[97]"></a>strchr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_headers
</UL>

<P><STRONG><a name="[88]"></a>strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceStr
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_send
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_connected
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_done
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_thread
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_timedout
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_connected
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_closed
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_aborted
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2ripStr
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU16ToStr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;senddata
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_connection
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePageIpAddr
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendIP2phone
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpStrToU8
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsValidPhone
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSmtpSvr
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loop_process_sm
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToAscii
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpU8ToStr
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_GSM
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_head_modify
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_push
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_pop
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;s_FIFO_head
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadConfigPara
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TelAsciiToUnicode
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMemTelUnicode
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_mem_para
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_flash_para
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowActiveWeb
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_mem_to_flash
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendEmail_163
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LookupIP
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmailUserPW
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XEmailAddr
</UL>

<P><STRONG><a name="[85]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_lookup
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
</UL>

<P><STRONG><a name="[a4]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_thread
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uip_Appcall
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_msg
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePageIpAddr
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_set_para
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_get_para
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_cmd_procese
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analyse_GSM_SM
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catch_phone_sm
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_GSM
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_GSM_active
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareFlashWithMem
</UL>

<P><STRONG><a name="[83]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReplaceStr
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_query
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_cmd_process
</UL>

<P><STRONG><a name="[93]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_thread
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_headers
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_statusline
</UL>

<P><STRONG><a name="[39]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[234]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>__0printf$bare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[238]"></a>__1printf$bare</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)

<P><STRONG><a name="[b2]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readbuf
</UL>

<P><STRONG><a name="[239]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[23a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[23b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[37]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfb.o(i.__0printf$bare)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>TI4_Config</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[47]"></a>TI3_Config</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[45]"></a>TI2_Config</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[43]"></a>TI1_Config</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[55]"></a>SetSysClockTo72</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, system_stm32f10x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[54]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[59]"></a>delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[66]"></a>chksum</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_ipchksum
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_chksum
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upper_layer_chksum
</UL>

<P><STRONG><a name="[69]"></a>upper_layer_chksum</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = upper_layer_chksum &rArr; chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_tcpchksum
</UL>

<P><STRONG><a name="[6d]"></a>uip_reass</STRONG> (Thumb, 656 bytes, Stack size 24 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = uip_reass &rArr; uip_ipchksum &rArr; chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_ipchksum
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
</UL>

<P><STRONG><a name="[70]"></a>uip_add_rcv_nxt</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, uip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uip_add_rcv_nxt
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_add32
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_process
</UL>

<P><STRONG><a name="[77]"></a>uip_arp_update</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, uip_arp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uip_arp_update
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_arp_arpin
</UL>

<P><STRONG><a name="[81]"></a>parse_name</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, resolv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newdata
</UL>

<P><STRONG><a name="[7e]"></a>check_entries</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, resolv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = check_entries &rArr; resolv_found &rArr; SendEmail_163 &rArr; smtp_send &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_appcall
</UL>

<P><STRONG><a name="[80]"></a>newdata</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, resolv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = newdata &rArr; resolv_found &rArr; SendEmail_163 &rArr; smtp_send &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_found
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_name
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resolv_appcall
</UL>

<P><STRONG><a name="[87]"></a>init_connection</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_connection
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_get
</UL>

<P><STRONG><a name="[90]"></a>copy_string</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = copy_string &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;senddata
</UL>

<P><STRONG><a name="[91]"></a>senddata</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = senddata &rArr; debug_info_show &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_info_show
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_string
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
</UL>

<P><STRONG><a name="[9e]"></a>acked</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, webclient.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
</UL>

<P><STRONG><a name="[92]"></a>parse_statusline</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = parse_statusline &rArr; webclient_aborted &rArr; debug_info_show &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_aborted
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newdata_WClt
</UL>

<P><STRONG><a name="[96]"></a>casecmp</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = casecmp
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_headers
</UL>

<P><STRONG><a name="[95]"></a>parse_headers</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = parse_headers &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;casecmp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;newdata_WClt
</UL>

<P><STRONG><a name="[98]"></a>newdata_WClt</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, webclient.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = newdata_WClt &rArr; webclient_datahandler &rArr; sendIP2phone &rArr; s_FIFO_push &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_datahandler
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_headers
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_statusline
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;webclient_appcall
</UL>

<P><STRONG><a name="[a1]"></a>smtp_thread</STRONG> (Thumb, 2672 bytes, Stack size 16 bytes, smtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = smtp_thread &rArr; smtp_done &rArr; lport2ripStr &rArr; IpU16ToStr &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_send
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readto
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_done
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smtp_appcall
</UL>

<P><STRONG><a name="[ad]"></a>buf_setup</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, psock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readbuf
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readto
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_init
</UL>

<P><STRONG><a name="[a9]"></a>buf_bufdata</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, psock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readbuf
</UL>

<P><STRONG><a name="[af]"></a>buf_bufto</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, psock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = buf_bufto
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_readto
</UL>

<P><STRONG><a name="[aa]"></a>send_data</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, psock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = send_data &rArr; uip_send &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_generator_send
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_send
</UL>

<P><STRONG><a name="[ab]"></a>data_acked</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, psock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_generator_send
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;psock_send
</UL>

<P><STRONG><a name="[106]"></a>GetDataToBuf1</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usart_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rcv_Usart1_To_Array
</UL>

<P><STRONG><a name="[107]"></a>EE_Format</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EE_Format &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[109]"></a>EE_FindValidPage</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, eeprom.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>

<P><STRONG><a name="[108]"></a>EE_VerifyPageFullWriteVariable</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_PageTransfer
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Init
</UL>

<P><STRONG><a name="[10c]"></a>EE_PageTransfer</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, eeprom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EE_PageTransfer &rArr; EE_VerifyPageFullWriteVariable &rArr; FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_VerifyPageFullWriteVariable
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_FindValidPage
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadVariable
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteVariable
</UL>

<P><STRONG><a name="[175]"></a>add_msg_type</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_request
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_discover
</UL>

<P><STRONG><a name="[179]"></a>add_server_id</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_request
</UL>

<P><STRONG><a name="[17a]"></a>add_req_ipaddr</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_request
</UL>

<P><STRONG><a name="[176]"></a>add_req_options</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_discover
</UL>

<P><STRONG><a name="[177]"></a>add_end</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_request
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_discover
</UL>

<P><STRONG><a name="[173]"></a>create_msg</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_request
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_discover
</UL>

<P><STRONG><a name="[174]"></a>send_discover</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_msg
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_end
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_req_options
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_msg_type
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_dhcp
</UL>

<P><STRONG><a name="[178]"></a>send_request</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uip_send
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_msg
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_end
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_req_ipaddr
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_server_id
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_msg_type
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_dhcp
</UL>

<P><STRONG><a name="[17c]"></a>parse_options</STRONG> (Thumb, 118 bytes, Stack size 12 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_msg
</UL>

<P><STRONG><a name="[17b]"></a>parse_msg</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_options
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_dhcp
</UL>

<P><STRONG><a name="[17d]"></a>handle_dhcp</STRONG> (Thumb, 396 bytes, Stack size 8 bytes, dhcpc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_expired
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_msg
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_request
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_discover
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcpc_configured
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcpc_appcall
</UL>

<P><STRONG><a name="[182]"></a>_printf_core</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfb.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$bare
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
